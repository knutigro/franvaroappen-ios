//
//  FranvaroAppenTests.swift
//  FranvaroAppenTests
//
//  Created by Knut Inge Grosland on 2016-11-09.
//  Copyright © 2016 Knut Inge Grosland. All rights reserved.
//

import XCTest
@testable import FranvaroAppen

class FranvaroAppenTests: XCTestCase {
    
    let personalNumber = "19760302-2539"

    static let dateFormatter: Foundation.DateFormatter = {
        let dateFormatter = Foundation.DateFormatter()
        dateFormatter.dateFormat = "yyyy-MM-dd HH:mm"
        return dateFormatter
    }()
    
    override func setUp() {
        super.setUp()
        // Put setup code here. This method is called before the invocation of each test method in the class.
    }
    
    override func tearDown() {
        // Put teardown code here. This method is called after the invocation of each test method in the class.
        super.tearDown()
    }
    
    func testInfoMessage() {
        let message = "Lind hämtas av sin morfar i dag."
        let result = MessageHelper.messageForInformation(personalNumber: personalNumber, message: message)

        let excpectedResult = "Info " + personalNumber + " " + message
        
        XCTAssertEqual(result, excpectedResult)
    }
    
    func testSjukMessage() {
        let result = MessageHelper.messageForSickLeave(personalNumber: personalNumber, from: Date(), to: nil)
        let excpectedResult = "Frv " + personalNumber

        XCTAssertEqual(result, excpectedResult)
    }
    
    func testSjukMessagePartOfDay() {
        let from = FranvaroAppenTests.dateFormatter.date(from: "2016-03-02 08:45")!
        let to = from.addingTimeInterval(60 * 60 * 3)
        let result = MessageHelper.messageForSickLeave(personalNumber: personalNumber, from: from, to: to)
        let excpectedResult = "Frv " + personalNumber + " 0845-1145"
        
        XCTAssertEqual(result, excpectedResult)
    }
    
    func testAbsence() {
        let from = FranvaroAppenTests.dateFormatter.date(from: "2016-03-02 08:45")!

        let result = MessageHelper.messageForAbsence(personalNumber: personalNumber, from: from, to: nil)
        let excpectedResult = "Ledig " + personalNumber + " 160302"
        
        XCTAssertEqual(result, excpectedResult)
    }
    
    func testAbsenceLongerPeriod() {
        let from = FranvaroAppenTests.dateFormatter.date(from: "2016-03-02 08:45")!
        let to = FranvaroAppenTests.dateFormatter.date(from: "2016-03-05 08:45")!
        
        let result = MessageHelper.messageForAbsence(personalNumber: personalNumber, from: from, to: to)
        let excpectedResult = "Ledig " + personalNumber + " 160302-160305"
        
        XCTAssertEqual(result, excpectedResult)
    }
    
    func testAbsencePartOfDay() {
        let from = FranvaroAppenTests.dateFormatter.date(from: "2016-03-02 08:45")!
        let to = FranvaroAppenTests.dateFormatter.date(from: "2016-03-02 10:45")!
        
        let result = MessageHelper.messageForAbsence(personalNumber: personalNumber, from: from, to: to)
        let excpectedResult = "Ledig " + personalNumber + " 160302 0845-1045"
        
        XCTAssertEqual(result, excpectedResult)
    }
}
